{% extends "page.html.j2" %}

{% block container %}
<div class="row mb-3">
    <div class="col">
        <h1>{{ activity["name"] }}</h1>
    </div>
</div>

<div class="row mb-3">
    <div class="col-sm-12 col-md-4 col-lg-4 col-xl-4 col-xxl-4">
        <dl>
            <dt>Name</dt>
            <dd>{{ activity["name"] }}</dd>
            <dt>Kind</dt>
            <dd>{{ activity.kind }}</dd>
            <dt>Commute</dt>
            <dd>{{ activity.commute }}</dd>
            <dt>Distance</dt>
            <dd>{{ activity.distance_km|round(1) }} km</dd>
            <dt>Elapsed time</dt>
            <dd>{{ activity.elapsed_time|td }}</dd>
            <dt>Moving time</dt>
            <dd>{{ activity.moving_time|td }}</dd>
            <dt>Average moving speed</dt>
            <dd>{{ activity.average_speed_moving_kmh|round(1) }} km/h = {{
                (60/activity.average_speed_moving_kmh)|round(1) }} min/km</dd>
            <dt>Average elapsed speed</dt>
            <dd>{{ activity.average_speed_elapsed_kmh|round(1) }} km/h = {{
                (60/activity.average_speed_elapsed_kmh)|round(1) }} min/km</dd>
            <dt>Start time</dt>
            <dd><a href="{{ url_for('activity.day', year=date.year, month=date.month, day=date.day) }}">{{ date }}</a>
                {{ time }}
            </dd>
            <dt>Calories</dt>
            <dd>{{ activity.calories }}</dd>
            <dt>Steps</dt>
            <dd>{{ activity.steps }}</dd>
            {% if activity.elevation_gain is defined %}
            <dt>Elevation gain</dt>
            <dd>{{ activity.elevation_gain|round(0) }} m</dd>
            {% endif %}
            <dt>Equipment</dt>
            <dd>{{ activity['equipment'] }}</dd>
            <dt>New Explorer Tiles</dt>
            <dd>{{ new_tiles[14] }}</dd>
            <dt>New Squadratinhos</dt>
            <dd>{{ new_tiles[17] }}</dd>
            <dt>ID</dt>
            <dd>{{ activity.id }}</dd>
            <dt>Source path</dt>
            <dd>{{ activity.path }}</dd>
        </dl>

        <a href="{{ url_for('.edit', id=activity['id']) }}" class="btn btn-secondary btn-small">Edit metadata</a>
    </div>
    <div class="col-sm-12 col-md-8 col-lg-8 col-xl-8 col-xxl-8">
        <div id="activity-map" style="height: 500px;" class="mb-3"></div>
        <script>
            var map = L.map('activity-map', {
                fullscreenControl: true
            });
            L.tileLayer('/tile/pastel/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '{{ map_tile_attribution|safe }}'
            }).addTo(map);

            let geojson = L.geoJSON({{ color_line_geojson| safe }}, {
                style: function (feature) { return { color: feature.properties.color } }
            }).addTo(map)
            map.fitBounds(geojson.getBounds());
        </script>


        <style>
            span.colorbar {
                text-shadow: -1px -1px 0 black, -1px 0px 0 black, -1px 1px 0 black, 0px -1px 0 black, 0px 0px 0 black, 0px 1px 0 black, 1px -1px 0 black, 1px 0px 0 black, 1px 1px 0 black;
                padding-left: 5px;
                padding-right: 5px;
                line-height: 130%;
                color: white;
            }
        </style>

        <div>
            {% for speed, color in speed_color_bar.colors %}
            <span class="colorbar" style="width: 15px; background-color: {{ color }}">{{ speed }}</span>
            {% endfor %}
            km/h
        </div>
    </div>
</div>


<div class="row mb-3">
    <div class="col">
        <h2>Distance & speed</h2>
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-4">
        {{ vega_direct("distance_time_plot", distance_time_plot) }}
    </div>
    <div class="col-md-4">
        {{ vega_direct("speed_time_plot", speed_time_plot) }}
    </div>
    <div class="col-md-4">
        {{ vega_direct("speed_distribution_plot", speed_distribution_plot) }}
    </div>
</div>

{% if altitude_time_plot is defined %}
<div class="row mb-3">
    <div class="col">
        <h2>Altitude</h2>
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-4">
        {{ vega_direct("altitude_time_plot", altitude_time_plot) }}
    </div>
    {% if elevation_gain_cum_plot is defined %}
    <div class="col-md-4">
        {{ vega_direct("elevation_gain_cum_plot", elevation_gain_cum_plot) }}
    </div>
    {% endif %}
</div>
{% endif %}

{% if heartrate_time_plot is defined %}
<h2>Heart rate</h2>

<div class="row mb-3">
    <div class="col-md-4">
        {{ vega_direct("heartrate_time_plot", heartrate_time_plot) }}
    </div>
    <div class="col-md-4">
        {% if heart_zones_plot is defined %}
        {{ vega_direct("heart_zones_plot", heart_zones_plot) }}
        {% else %}
        <p>Your activity has heart data, but this program doesn't know your maximum heart rate (or birth year) and
            therefore cannot compute the heart rate zones. Go to the <a
                href="{{ url_for('settings.heart_rate') }}">settings</a>.</p>
        {% endif %}
    </div>
</div>
{% endif %}

{% if cadence_time_plot is defined %}
<h2>Cadence</h2>

<div class="row mb-3">
    <div class="col-md-4">
        {{ vega_direct("cadence_time_plot", cadence_time_plot) }}
    </div>
</div>
{% endif %}


<h2>Share picture</h2>

<p><img class="img-fluid" src="{{ url_for('.sharepic', id=activity.id) }}" /></p>

<p>Not happy with the displayed data? <a href="{{ url_for('settings.sharepic') }}">Change share picture
        settings</a>.</p>

{% if new_tiles_geojson %}
<h2>New explorer tiles</h2>
<p>With this activity you have explored new explorer tiles. The following maps show the new tiles on the respective zoom
    levels.</p>
<script>
    function add_map(id, geojson) {
        let map = L.map(`map-${id}`, {
            fullscreenControl: true
        })
        L.tileLayer('/tile/color/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '{{ map_tile_attribution|safe }}'
        }).addTo(map)

        let geojson_layer = L.geoJSON(geojson).addTo(map)
        map.fitBounds(geojson_layer.getBounds())
        return map
    }
</script>

<div class="row mb-3">
    {% for zoom, geojson in new_tiles_geojson.items() %}
    <div class="col-md-6">
        <h3>Zoom {{ zoom }}</h3>
        <p>There are {{ new_tiles[zoom] }} new tiles:</p>
        <div id="map-{{ zoom }}" style="height: 300px; width: 100%;"></div>
        <script>
            let map{{ zoom }} = add_map("{{ zoom }}", {{ geojson | safe }})
        </script>
    </div>
    {% endfor %}
</div>
{% endif %}

{% if similar_activites|length > 0 %}
<div class="row mb-3">
    <div class="col">
        <h2>Activities with the same name</h2>

        <p><a href="{{ url_for('.name', name=activity['name']) }}">Overview over these activities</a></p>

        <table class="table table-sort table-arrows">
            <thead>
                <tr>
                    <th>Date</th>
                    <th class="numeric-sort">Distance / km</th>
                    <th>Elapsed time</th>
                    <th>Equipment</th>
                    <th>Kind</th>
                </tr>
            </thead>
            <tbody>
                {% for other_activity in similar_activites %}
                <tr>
                    <td><a href="{{ url_for('.show', id=other_activity.id) }}">{{ other_activity.start|dt
                            }}</a></td>
                    <td>{{ other_activity.distance_km | round(1) }}</td>
                    <td>{{ other_activity.elapsed_time|td }}</td>
                    <td>{{ other_activity["equipment"] }}</td>
                    <td>{{ other_activity["kind"] }}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>
{% endif %}

{% endblock %}